package org.fisco.bcos.contracts;
import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.fisco.bcos.channel.client.TransactionSucCallback;
import org.fisco.bcos.web3j.abi.TypeReference;
import org.fisco.bcos.web3j.abi.datatypes.Address;
import org.fisco.bcos.web3j.abi.datatypes.Function;
import org.fisco.bcos.web3j.abi.datatypes.Type;
import org.fisco.bcos.web3j.abi.datatypes.Utf8String;
import org.fisco.bcos.web3j.crypto.Credentials;
import org.fisco.bcos.web3j.protocol.Web3j;
import org.fisco.bcos.web3j.protocol.core.RemoteCall;
import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.fisco.bcos.web3j.tuples.generated.Tuple7;
import org.fisco.bcos.web3j.tx.Contract;
import org.fisco.bcos.web3j.tx.TransactionManager;
import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version none.
 */
@SuppressWarnings("unchecked")
public class MusicChain extends Contract {
    private static final String BINARY = "608060405234801561001057600080fd5b50614008806100206000396000f3006080604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630351bf3d1461010157806312958f1c146101b05780631ab4ce99146102405780632165fa9a146103685780632ebcb65314610490578063677ac7081461052057806371b88037146106485780637dcf1648146106d857806385e0c50d1461074157806399c8d757146107ca578063a2f97191146108b9578063a78f18a914610949578063ac9f0a4014610a71578063b1f3b4ee14610bf2578063b3cbdb3014610d1a578063ccb018ce14610da3578063ce7c5e73146110d4578063dda69ab21461115d575b600080fd5b34801561010d57600080fd5b506101ae600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506111ed565b005b3480156101bc57600080fd5b506101c561162a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102055780820151818401526020810190506101ea565b50505050905090810190601f1680156102325780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561024c57600080fd5b506102ed600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061170b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561032d578082015181840152602081019050610312565b50505050905090810190601f16801561035a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561037457600080fd5b50610415600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506119f6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561045557808201518184015260208101905061043a565b50505050905090810190601f1680156104825780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561049c57600080fd5b506104a5611ce1565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104e55780820151818401526020810190506104ca565b50505050905090810190601f1680156105125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561052c57600080fd5b506105cd600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611dc2565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561060d5780820151818401526020810190506105f2565b50505050905090810190601f16801561063a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561065457600080fd5b5061065d6120ad565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561069d578082015181840152602081019050610682565b50505050905090810190601f1680156106ca5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156106e457600080fd5b5061073f600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061218e565b005b34801561074d57600080fd5b506107c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050612442565b005b3480156107d657600080fd5b50610877600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506128a1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108c557600080fd5b506108ce612b14565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561090e5780820151818401526020810190506108f3565b50505050905090810190601f16801561093b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561095557600080fd5b506109f6600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050612bf5565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a36578082015181840152602081019050610a1b565b50505050905090810190601f168015610a635780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610a7d57600080fd5b50610bf0600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050612ee0565b005b348015610bfe57600080fd5b50610c9f600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050613150565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610cdf578082015181840152602081019050610cc4565b50505050905090810190601f168015610d0c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610d2657600080fd5b50610da1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061343b565b005b348015610daf57600080fd5b50610e0a600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050613646565b60405180806020018873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018060200180602001806020018060200187810387528e818151815260200191508051906020019080838360005b83811015610e90578082015181840152602081019050610e75565b50505050905090810190601f168015610ebd5780820380516001836020036101000a031916815260200191505b5087810386528c818151815260200191508051906020019080838360005b83811015610ef6578082015181840152602081019050610edb565b50505050905090810190601f168015610f235780820380516001836020036101000a031916815260200191505b5087810385528b818151815260200191508051906020019080838360005b83811015610f5c578082015181840152602081019050610f41565b50505050905090810190601f168015610f895780820380516001836020036101000a031916815260200191505b5087810384528a818151815260200191508051906020019080838360005b83811015610fc2578082015181840152602081019050610fa7565b50505050905090810190601f168015610fef5780820380516001836020036101000a031916815260200191505b50878103835289818151815260200191508051906020019080838360005b8381101561102857808201518184015260208101905061100d565b50505050905090810190601f1680156110555780820380516001836020036101000a031916815260200191505b50878103825288818151815260200191508051906020019080838360005b8381101561108e578082015181840152602081019050611073565b50505050905090810190601f1680156110bb5780820380516001836020036101000a031916815260200191505b509d505050505050505050505050505060405180910390f35b3480156110e057600080fd5b5061115b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050613c53565b005b34801561116957600080fd5b50611172613dd6565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156111b2578082015181840152602081019050611197565b50505050905090810190601f1680156111df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60008060009150600090505b6001805490508160ff16101561131757836040518082805190602001908083835b60208310151561123f578051825260208201915060208101905060208303925061121a565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660018260ff1681548110151561128257fe5b906000526020600020906009020160010160405180828054600181600116156101000203166002900480156112ee5780601f106112cc5761010080835404028352918201916112ee565b820191906000526020600020905b8154815290600101906020018083116112da575b5050915050604051809103902060001916141561130a57600191505b80806001019150506111f9565b60008260ff1614151561132957600080fd5b6001610120604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114355780601f1061140a57610100808354040283529160200191611435565b820191906000526020600020905b81548152906001019060200180831161141857829003601f168201915b5050505050815260200160011515815260200160206040519081016040528060008152508152602001602060405190810160405280600081525081526020016040805190810160405280600381526020017f4e61680000000000000000000000000000000000000000000000000000000000815250815260200160206040519081016040528060008152508152509080600181540180825580915050906001820390600052602060002090600902016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190611551929190613eb7565b50604082015181600201908051906020019061156e929190613eb7565b50606082015181600301908051906020019061158b929190613eb7565b5060808201518160040160006101000a81548160ff02191690831515021790555060a08201518160050190805190602001906115c8929190613eb7565b5060c08201518160060190805190602001906115e5929190613eb7565b5060e0820151816007019080519060200190611602929190613eb7565b50610100820151816008019080519060200190611620929190613eb7565b5050505050505050565b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117015780601f106116d657610100808354040283529160200191611701565b820191906000526020600020905b8154815290600101906020018083116116e457829003601f168201915b5050505050905090565b606060008090505b6001805490508160ff1610156119ee57836040518082805190602001908083835b6020831015156117595780518252602082019150602081019050602083039250611734565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660018260ff1681548110151561179c57fe5b906000526020600020906009020160020160405180828054600181600116156101000203166002900480156118085780601f106117e6576101008083540402835291820191611808565b820191906000526020600020905b8154815290600101906020018083116117f4575b50509150506040518091039020600019161480156119195750826040518082805190602001908083835b6020831015156118575780518252602082019150602081019050602083039250611832565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660018260ff1681548110151561189a57fe5b906000526020600020906009020160030160405180828054600181600116156101000203166002900480156119065780601f106118e4576101008083540402835291820191611906565b820191906000526020600020905b8154815290600101906020018083116118f2575b5050915050604051809103902060001916145b156119e15760018160ff1681548110151561193057fe5b90600052602060002090600902016008018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119d55780601f106119aa576101008083540402835291602001916119d5565b820191906000526020600020905b8154815290600101906020018083116119b857829003601f168201915b505050505091506119ef565b8080600101915050611713565b5b5092915050565b606060008090505b6001805490508160ff161015611cd957836040518082805190602001908083835b602083101515611a445780518252602082019150602081019050602083039250611a1f565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660018260ff16815481101515611a8757fe5b90600052602060002090600902016002016040518082805460018160011615610100020316600290048015611af35780601f10611ad1576101008083540402835291820191611af3565b820191906000526020600020905b815481529060010190602001808311611adf575b5050915050604051809103902060001916148015611c045750826040518082805190602001908083835b602083101515611b425780518252602082019150602081019050602083039250611b1d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660018260ff16815481101515611b8557fe5b90600052602060002090600902016003016040518082805460018160011615610100020316600290048015611bf15780601f10611bcf576101008083540402835291820191611bf1565b820191906000526020600020905b815481529060010190602001808311611bdd575b5050915050604051809103902060001916145b15611ccc5760018160ff16815481101515611c1b57fe5b90600052602060002090600902016001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cc05780601f10611c9557610100808354040283529160200191611cc0565b820191906000526020600020905b815481529060010190602001808311611ca357829003601f168201915b50505050509150611cda565b80806001019150506119fe565b5b5092915050565b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611db85780601f10611d8d57610100808354040283529160200191611db8565b820191906000526020600020905b815481529060010190602001808311611d9b57829003601f168201915b5050505050905090565b606060008090505b6001805490508160ff1610156120a557836040518082805190602001908083835b602083101515611e105780518252602082019150602081019050602083039250611deb565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660018260ff16815481101515611e5357fe5b90600052602060002090600902016002016040518082805460018160011615610100020316600290048015611ebf5780601f10611e9d576101008083540402835291820191611ebf565b820191906000526020600020905b815481529060010190602001808311611eab575b5050915050604051809103902060001916148015611fd05750826040518082805190602001908083835b602083101515611f0e5780518252602082019150602081019050602083039250611ee9565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660018260ff16815481101515611f5157fe5b90600052602060002090600902016003016040518082805460018160011615610100020316600290048015611fbd5780601f10611f9b576101008083540402835291820191611fbd565b820191906000526020600020905b815481529060010190602001808311611fa9575b5050915050604051809103902060001916145b156120985760018160ff16815481101515611fe757fe5b90600052602060002090600902016007018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561208c5780601f106120615761010080835404028352916020019161208c565b820191906000526020600020905b81548152906001019060200180831161206f57829003601f168201915b505050505091506120a6565b8080600101915050611dca565b5b5092915050565b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121845780601f1061215957610100808354040283529160200191612184565b820191906000526020600020905b81548152906001019060200180831161216757829003601f168201915b5050505050905090565b60008060009150339050600091505b6001805490508260ff16101561243d578073ffffffffffffffffffffffffffffffffffffffff1660018360ff168154811015156121d657fe5b906000526020600020906009020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561231e5750826040518082805190602001908083835b60208310151561225c5780518252602082019150602081019050602083039250612237565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660018360ff1681548110151561229f57fe5b9060005260206000209060090201600101604051808280546001816001161561010002031660029004801561230b5780601f106122e957610100808354040283529182019161230b565b820191906000526020600020905b8154815290600101906020018083116122f7575b5050915050604051809103902060001916145b801561235e57506001151560018360ff1681548110151561233b57fe5b906000526020600020906009020160040160009054906101000a900460ff161515145b1561243057600060018360ff1681548110151561237757fe5b906000526020600020906009020160040160006101000a81548160ff021916908315150217905550602060405190810160405280600081525060018360ff168154811015156123c257fe5b906000526020600020906009020160050190805190602001906123e6929190613f37565b50602060405190810160405280600081525060018360ff1681548110151561240a57fe5b9060005260206000209060090201600601908051906020019061242e929190613f37565b505b818060010192505061219d565b505050565b600080600033925060009150600091505b6001805490508260ff16101561289a57836040518082805190602001908083835b6020831015156124995780518252602082019150602081019050602083039250612474565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660018360ff168154811015156124dc57fe5b906000526020600020906009020160010160405180828054600181600116156101000203166002900480156125485780601f10612526576101008083540402835291820191612548565b820191906000526020600020905b815481529060010190602001808311612534575b50509150506040518091039020600019161480156125d457503373ffffffffffffffffffffffffffffffffffffffff1660018360ff1681548110151561258a57fe5b906000526020600020906009020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b1561288d57338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083816002019080519060200190612677929190613f37565b50600260e0604051908101604052808773ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001868152602001602060405190810160405280600081525081526020016040805190810160405280600381526020017f4e6168000000000000000000000000000000000000000000000000000000000081525081526020016020604051908101604052806000815250815260200160206040519081016040528060008152508152509080600181540180825580915050906001820390600052602060002090600702016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190612814929190613eb7565b506060820151816003019080519060200190612831929190613eb7565b50608082015181600401908051906020019061284e929190613eb7565b5060a082015181600501908051906020019061286b929190613eb7565b5060c0820151816006019080519060200190612888929190613eb7565b505050505b8180600101925050612453565b5050505050565b600080600090505b6001805490508160ff161015612b0c57836040518082805190602001908083835b6020831015156128ef57805182526020820191506020810190506020830392506128ca565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660018260ff1681548110151561293257fe5b9060005260206000209060090201600201604051808280546001816001161561010002031660029004801561299e5780601f1061297c57610100808354040283529182019161299e565b820191906000526020600020905b81548152906001019060200180831161298a575b5050915050604051809103902060001916148015612aaf5750826040518082805190602001908083835b6020831015156129ed57805182526020820191506020810190506020830392506129c8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660018260ff16815481101515612a3057fe5b90600052602060002090600902016003016040518082805460018160011615610100020316600290048015612a9c5780601f10612a7a576101008083540402835291820191612a9c565b820191906000526020600020905b815481529060010190602001808311612a88575b5050915050604051809103902060001916145b15612aff5760018160ff16815481101515612ac657fe5b906000526020600020906009020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150612b0d565b80806001019150506128a9565b5b5092915050565b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612beb5780601f10612bc057610100808354040283529160200191612beb565b820191906000526020600020905b815481529060010190602001808311612bce57829003601f168201915b5050505050905090565b606060008090505b6001805490508160ff161015612ed857836040518082805190602001908083835b602083101515612c435780518252602082019150602081019050602083039250612c1e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660018260ff16815481101515612c8657fe5b90600052602060002090600902016002016040518082805460018160011615610100020316600290048015612cf25780601f10612cd0576101008083540402835291820191612cf2565b820191906000526020600020905b815481529060010190602001808311612cde575b5050915050604051809103902060001916148015612e035750826040518082805190602001908083835b602083101515612d415780518252602082019150602081019050602083039250612d1c565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660018260ff16815481101515612d8457fe5b90600052602060002090600902016003016040518082805460018160011615610100020316600290048015612df05780601f10612dce576101008083540402835291820191612df0565b820191906000526020600020905b815481529060010190602001808311612ddc575b5050915050604051809103902060001916145b15612ecb5760018160ff16815481101515612e1a57fe5b90600052602060002090600902016005018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612ebf5780601f10612e9457610100808354040283529160200191612ebf565b820191906000526020600020905b815481529060010190602001808311612ea257829003601f168201915b50505050509150612ed9565b8080600101915050612bfd565b5b5092915050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016040518082805460018160011615610100020316600290048015612f7e5780601f10612f5c576101008083540402835291820191612f7e565b820191906000526020600020905b815481529060010190602001808311612f6a575b5050915050604051809103902060001916141515612f9b57600080fd5b846000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019080519060200190612ff0929190613f37565b50836000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001019080519060200190613046929190613f37565b50826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201908051906020019061309c929190613f37565b50816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030190805190602001906130f2929190613f37565b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004019080519060200190613148929190613f37565b505050505050565b606060008090505b6001805490508160ff16101561343357836040518082805190602001908083835b60208310151561319e5780518252602082019150602081019050602083039250613179565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660018260ff168154811015156131e157fe5b9060005260206000209060090201600201604051808280546001816001161561010002031660029004801561324d5780601f1061322b57610100808354040283529182019161324d565b820191906000526020600020905b815481529060010190602001808311613239575b505091505060405180910390206000191614801561335e5750826040518082805190602001908083835b60208310151561329c5780518252602082019150602081019050602083039250613277565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660018260ff168154811015156132df57fe5b9060005260206000209060090201600301604051808280546001816001161561010002031660029004801561334b5780601f1061332957610100808354040283529182019161334b565b820191906000526020600020905b815481529060010190602001808311613337575b5050915050604051809103902060001916145b156134265760018160ff1681548110151561337557fe5b90600052602060002090600902016006018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561341a5780601f106133ef5761010080835404028352916020019161341a565b820191906000526020600020905b8154815290600101906020018083116133fd57829003601f168201915b50505050509150613434565b8080600101915050613158565b5b5092915050565b60008033915060009050600090505b6001805490508160ff1610156136405760018160ff1681548110151561346c57fe5b906000526020600020906009020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480156135cb5750826040518082805190602001908083835b60208310151561350957805182526020820191506020810190506020830392506134e4565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660018260ff1681548110151561354c57fe5b906000526020600020906009020160010160405180828054600181600116156101000203166002900480156135b85780601f106135965761010080835404028352918201916135b8565b820191906000526020600020905b8154815290600101906020018083116135a4575b5050915050604051809103902060001916145b15613633578360018260ff168154811015156135e357fe5b906000526020600020906009020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b808060010191505061344a565b50505050565b6060600060608060608060606000809050600090505b6001805490508160ff161015613c4657886040518082805190602001908083835b6020831015156136a2578051825260208201915060208101905060208303925061367d565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660018260ff168154811015156136e557fe5b906000526020600020906009020160010160405180828054600181600116156101000203166002900480156137515780601f1061372f576101008083540402835291820191613751565b820191906000526020600020905b81548152906001019060200180831161373d575b50509150506040518091039020600019161415613c395760018160ff1681548110151561377a57fe5b906000526020600020906009020160020160018260ff1681548110151561379d57fe5b906000526020600020906009020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660018360ff168154811015156137e157fe5b906000526020600020906009020160030160018460ff1681548110151561380457fe5b906000526020600020906009020160050160018560ff1681548110151561382757fe5b906000526020600020906009020160060160018660ff1681548110151561384a57fe5b906000526020600020906009020160070160018760ff1681548110151561386d57fe5b9060005260206000209060090201600801868054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156139135780601f106138e857610100808354040283529160200191613913565b820191906000526020600020905b8154815290600101906020018083116138f657829003601f168201915b50505050509650848054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156139af5780601f10613984576101008083540402835291602001916139af565b820191906000526020600020905b81548152906001019060200180831161399257829003601f168201915b50505050509450838054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613a4b5780601f10613a2057610100808354040283529160200191613a4b565b820191906000526020600020905b815481529060010190602001808311613a2e57829003601f168201915b50505050509350828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613ae75780601f10613abc57610100808354040283529160200191613ae7565b820191906000526020600020905b815481529060010190602001808311613aca57829003601f168201915b50505050509250818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613b835780601f10613b5857610100808354040283529160200191613b83565b820191906000526020600020905b815481529060010190602001808311613b6657829003601f168201915b50505050509150808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613c1f5780601f10613bf457610100808354040283529160200191613c1f565b820191906000526020600020905b815481529060010190602001808311613c0257829003601f168201915b505050505090509750975097509750975097509750613c47565b808060010191505061365c565b5b50919395979092949650565b600360a0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff16815260200160206040519081016040528060008152508152602001838152602001600015158152509080600181540180825580915050906001820390600052602060002090600502016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019080519060200190613d91929190613eb7565b506060820151816003019080519060200190613dae929190613eb7565b5060808201518160040160006101000a81548160ff0219169083151502179055505050505050565b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015613ead5780601f10613e8257610100808354040283529160200191613ead565b820191906000526020600020905b815481529060010190602001808311613e9057829003601f168201915b5050505050905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613ef857805160ff1916838001178555613f26565b82800160010185558215613f26579182015b82811115613f25578251825591602001919060010190613f0a565b5b509050613f339190613fb7565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613f7857805160ff1916838001178555613fa6565b82800160010185558215613fa6579182015b82811115613fa5578251825591602001919060010190613f8a565b5b509050613fb39190613fb7565b5090565b613fd991905b80821115613fd5576000816000905550600101613fbd565b5090565b905600a165627a7a7230582092fc89b044de1e978414c74fb26eb59a221d33a72eac1fbf3dbd024cbdef92110029";

    public static final String FUNC_REGISTERMUSIC = "registerMusic";

    public static final String FUNC_GETUSERNAME = "getUserName";

    public static final String FUNC_GETMUSICMODIFIEDBYSEARCH = "getMusicModifiedBySearch";

    public static final String FUNC_GETMUSICBINBYSEARCH = "getMusicBinBySearch";

    public static final String FUNC_GETUSERID = "getUserId";

    public static final String FUNC_GETMUSICPLATORMBYSEARCH = "getMusicPlatormBySearch";

    public static final String FUNC_GETUSEREMAIL = "getUserEmail";

    public static final String FUNC_CANCELMUSIC = "cancelMusic";

    public static final String FUNC_AUTHORIZEMUSIC = "authorizeMusic";

    public static final String FUNC_GETMUSICOWNERBYSEARCH = "getMusicOwnerBySearch";

    public static final String FUNC_GETUSERLOCATION = "getUserLocation";

    public static final String FUNC_GETMUSICBTIMEBYSEARCH = "getMusicBtimeBySearch";

    public static final String FUNC_REGISTERUSER = "registerUser";

    public static final String FUNC_GETMUSICETIMEBYSEARCH = "getMusicEtimeBySearch";

    public static final String FUNC_TRANSFERMUSIC = "transferMusic";

    public static final String FUNC_CONSULT = "consult";

    public static final String FUNC_REGISTERNOTICE = "registerNotice";

    public static final String FUNC_GETUSERPHONE = "getUserPhone";

    @Deprecated
    protected MusicChain(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected MusicChain(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected MusicChain(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected MusicChain(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> registerMusic(String _bin, String _name) {
        final Function function = new Function(
                FUNC_REGISTERMUSIC, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_bin), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void registerMusic(String _bin, String _name, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_REGISTERMUSIC, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_bin), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public RemoteCall<String> getUserName() {
        final Function function = new Function(FUNC_GETUSERNAME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getMusicModifiedBySearch(String _name, String _singer) {
        final Function function = new Function(FUNC_GETMUSICMODIFIEDBYSEARCH, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_singer)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getMusicBinBySearch(String _name, String _singer) {
        final Function function = new Function(FUNC_GETMUSICBINBYSEARCH, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_singer)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getUserId() {
        final Function function = new Function(FUNC_GETUSERID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getMusicPlatormBySearch(String _name, String _singer) {
        final Function function = new Function(FUNC_GETMUSICPLATORMBYSEARCH, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_singer)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getUserEmail() {
        final Function function = new Function(FUNC_GETUSEREMAIL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> cancelMusic(String _binhash) {
        final Function function = new Function(
                FUNC_CANCELMUSIC, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_binhash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void cancelMusic(String _binhash, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_CANCELMUSIC, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_binhash)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public RemoteCall<TransactionReceipt> authorizeMusic(String _to, String _binhash) {
        final Function function = new Function(
                FUNC_AUTHORIZEMUSIC, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_to), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_binhash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void authorizeMusic(String _to, String _binhash, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_AUTHORIZEMUSIC, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_to), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_binhash)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public RemoteCall<String> getMusicOwnerBySearch(String _name, String _singer) {
        final Function function = new Function(FUNC_GETMUSICOWNERBYSEARCH, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_singer)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getUserLocation() {
        final Function function = new Function(FUNC_GETUSERLOCATION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getMusicBtimeBySearch(String _name, String _singer) {
        final Function function = new Function(FUNC_GETMUSICBTIMEBYSEARCH, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_singer)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> registerUser(String _name, String _id, String _location, String _phone, String _email) {
        final Function function = new Function(
                FUNC_REGISTERUSER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_id), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_location), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_phone), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_email)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void registerUser(String _name, String _id, String _location, String _phone, String _email, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_REGISTERUSER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_id), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_location), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_phone), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_email)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public RemoteCall<String> getMusicEtimeBySearch(String _name, String _singer) {
        final Function function = new Function(FUNC_GETMUSICETIMEBYSEARCH, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_singer)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> transferMusic(String _to, String _binhash) {
        final Function function = new Function(
                FUNC_TRANSFERMUSIC, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_to), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_binhash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void transferMusic(String _to, String _binhash, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_TRANSFERMUSIC, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_to), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_binhash)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public RemoteCall<Tuple7<String, String, String, String, String, String, String>> consult(String _bin) {
        final Function function = new Function(FUNC_CONSULT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_bin)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple7<String, String, String, String, String, String, String>>(
                new Callable<Tuple7<String, String, String, String, String, String, String>>() {
                    @Override
                    public Tuple7<String, String, String, String, String, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<String, String, String, String, String, String, String>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (String) results.get(4).getValue(), 
                                (String) results.get(5).getValue(), 
                                (String) results.get(6).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> registerNotice(String _to, String _text) {
        final Function function = new Function(
                FUNC_REGISTERNOTICE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_to), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_text)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void registerNotice(String _to, String _text, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_REGISTERNOTICE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_to), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_text)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public RemoteCall<String> getUserPhone() {
        final Function function = new Function(FUNC_GETUSERPHONE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    @Deprecated
    public static MusicChain load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new MusicChain(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static MusicChain load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new MusicChain(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static MusicChain load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new MusicChain(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static MusicChain load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new MusicChain(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<MusicChain> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(MusicChain.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<MusicChain> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(MusicChain.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<MusicChain> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(MusicChain.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<MusicChain> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(MusicChain.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
